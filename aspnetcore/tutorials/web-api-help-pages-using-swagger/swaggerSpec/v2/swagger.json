{
  "openapi": "3.0.1",
  "info": {
    "title": "Movies Watched API",
    "description": "A simple example of ASP.NET Core Web API for movies watched during COVID-19 shelter-in-place.",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Bo Mo",
      "url": "https://twitter.com/iambzmo"
    },
    "license": {
      "name": "Use under LICX",
      "url": "https://example.com/license"
    },
    "version": "2.0"
  },
  "paths": {
    "/api/v2/MoviesWatched": {
      "get": {
        "tags": [
          "MoviesWatched"
        ],
        "summary": "Gets all watched movies sorted alphabetically.",
        "description": "Fetch all movies watched during COVID-19 shelter-in-place.",
        "operationId": "GetAllMovies",
        "responses": {
          "200": {
            "description": "Movies have been fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MoviesWatched"
        ],
        "summary": "Creates a Movie.",
        "description": "Record a movie watched during COVID-19 shelter-in-place.",
        "operationId": "CreateMovie",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The movie was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "400": {
            "description": "The movie data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/MoviesWatched/{id}": {
      "patch": {
        "tags": [
          "MoviesWatched"
        ],
        "summary": "Updates a rating of a specific Movie.",
        "description": "Updates movie rating.",
        "operationId": "UpdateMovieRating",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Movie ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The movie rating was updated."
          },
          "404": {
            "description": "The movie was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "MoviesWatched"
        ],
        "summary": "Gets a specific movie by its ID.",
        "description": "Fetch a movie watched during COVID-19 shelter-in-place.",
        "operationId": "GetMovieById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Movie ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The movie was found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "404": {
            "description": "The movie was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MoviesWatched"
        ],
        "summary": "Updates an existing Movie.",
        "description": "Changes the information for a watched movie.",
        "operationId": "UpdateMovieById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Movie ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The movie was updated."
          },
          "400": {
            "description": "The movie data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "The movie was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MoviesWatched"
        ],
        "summary": "Deletes a specific Movie.",
        "description": "Removes a watched movie.",
        "operationId": "DeleteMovieById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Movie ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The movie was deleted."
          },
          "404": {
            "description": "The movie was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Movie": {
        "required": [
          "name",
          "rating"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "rating": {
            "maximum": 5,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "comment": {
            "type": "string",
            "default": "N/A",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "Id": 4,
          "Name": "Sonic the Hedgehog",
          "Rating": 4.3,
          "Comment": "Gotta go fast!"
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      }
    }
  }
}